
/*
 * 
 */

package at.ac.tuwien.infosys.aic10.ass1.dto.supplier;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import aic2010.services.SupplierService;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.3
 * Mon Nov 08 23:02:39 CET 2010
 * Generated source version: 2.2.3
 * 
 */


@WebServiceClient(name = "SupplierService", 
                  wsdlLocation = "http://localhost:8088/supplier1?wsdl",
                  targetNamespace = "http://infosys.tuwien.ac.at/aic10/ass1/dto/supplier") 
public class SupplierServiceClient extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://infosys.tuwien.ac.at/aic10/ass1/dto/supplier", "SupplierService");
    public final static QName SupplierPT = new QName("http://infosys.tuwien.ac.at/aic10/ass1/dto/supplier", "SupplierPT");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8088/supplier1?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://localhost:8088/supplier1?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public SupplierServiceClient(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SupplierServiceClient(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SupplierServiceClient() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns SupplierService
     */
    @WebEndpoint(name = "SupplierPT")
    public SupplierService getSupplierPT() {
        return super.getPort(SupplierPT, SupplierService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SupplierService
     */
    @WebEndpoint(name = "SupplierPT")
    public SupplierService getSupplierPT(WebServiceFeature... features) {
        return super.getPort(SupplierPT, SupplierService.class, features);
    }

}
